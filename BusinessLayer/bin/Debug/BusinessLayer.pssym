<?xml version="1.0" encoding="utf-8"?>
<Symbols LinesOfCode="132" PostSharpLinesOfCode="0" xmlns="http://schemas.postsharp.org/2.0/symbols">
  <Class Class="#1=T:[Core]Core.Aspects.Postsharp.CacheAspects.CacheAspect">
    <Instance Declaration="#2=M:[BusinessLayer]BusinessLayer.Concrete.ProductManager::GetList()" Id="83d374a32461e2da">
      <Target>
        <JoinPoint Advising="#1" Description="#3=Intercepted by OnInvoke" Ordinal="0" />
      </Target>
    </Instance>
  </Class>
  <Class Class="#4=T:[Core]Core.Aspects.Postsharp.ValidationAspects.FluentValidationAspect">
    <Instance Declaration="#5=M:[BusinessLayer]BusinessLayer.Concrete.ProductManager::Add(EntityLayer.Concrete.Product)" Id="83d374a3e90474ae">
      <Target>
        <JoinPoint Advising="#4" Description="#6=Wrapped by advice(s) OnEntry, OnSuccess, OnException, OnExit" Ordinal="2" />
      </Target>
    </Instance>
    <Instance Declaration="#7=M:[BusinessLayer]BusinessLayer.Concrete.ProductManager::Update(EntityLayer.Concrete.Product)" Id="83d374a300e4c741">
      <Target>
        <JoinPoint Advising="#4" Description="#6" Ordinal="3" />
      </Target>
    </Instance>
  </Class>
  <Class Class="#8=T:[Core]Core.Aspects.Postsharp.CacheAspects.CacheRemoveAspect">
    <Instance Declaration="#5" Id="83d374a31621689d">
      <Target>
        <JoinPoint Advising="#8" Description="#6" />
      </Target>
    </Instance>
  </Class>
  <Class Class="#9=T:[Core]Core.Aspects.Postsharp.TransactionAspects.TransactionScopeAspect">
    <Instance Declaration="#10=M:[BusinessLayer]BusinessLayer.Concrete.ProductManager::TransactionalOperation(EntityLayer.Concrete.Product, EntityLayer.Concrete.Product)" Id="83d374a3123dc312">
      <Target>
        <JoinPoint Advising="#9" Description="#6" Ordinal="4" />
      </Target>
    </Instance>
  </Class>
  <Annotation Target="#11=M:[Core]Core.Aspects.Postsharp.ValidationAspects.FluentValidationAspect::OnEntry(PostSharp.Aspects.MethodExecutionArgs)" Arguments="#12=2" Description="#13=PostSharp estimates that 2 line(s) of code are saved every time this advice is applied. Use the [LinesOfCodeAvoided] attribute on the aspect or specify the LinesOfCodeAvoided property on the advice attribute to override this value." />
  <Annotation Target="#14=M:[PostSharp]PostSharp.Aspects.OnMethodBoundaryAspect::OnSuccess([PostSharp]PostSharp.Aspects.MethodExecutionArgs)" Arguments="#12" Description="#13" />
  <Annotation Target="#15=M:[PostSharp]PostSharp.Aspects.OnMethodBoundaryAspect::OnExit([PostSharp]PostSharp.Aspects.MethodExecutionArgs)" Arguments="#12" Description="#13" />
  <Annotation Target="#16=M:[PostSharp]PostSharp.Aspects.OnMethodBoundaryAspect::OnException([PostSharp]PostSharp.Aspects.MethodExecutionArgs)" Arguments="#12" Description="#13" />
  <Annotation Target="#17=M:[PostSharp]PostSharp.Aspects.OnMethodBoundaryAspect::OnEntry([PostSharp]PostSharp.Aspects.MethodExecutionArgs)" Arguments="#12" Description="#13" />
  <Annotation Target="#18=M:[Core]Core.Aspects.Postsharp.CacheAspects.CacheRemoveAspect::OnSuccess(PostSharp.Aspects.MethodExecutionArgs)" Arguments="#12" Description="#13" />
  <Annotation Target="#19=M:[Core]Core.Aspects.Postsharp.TransactionAspects.TransactionScopeAspect::OnEntry(PostSharp.Aspects.MethodExecutionArgs)" Arguments="#12" Description="#13" />
  <Annotation Target="#20=M:[Core]Core.Aspects.Postsharp.TransactionAspects.TransactionScopeAspect::OnSuccess(PostSharp.Aspects.MethodExecutionArgs)" Arguments="#12" Description="#13" />
  <Annotation Target="#21=M:[Core]Core.Aspects.Postsharp.TransactionAspects.TransactionScopeAspect::OnExit(PostSharp.Aspects.MethodExecutionArgs)" Arguments="#12" Description="#13" />
</Symbols>